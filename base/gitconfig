[user]
	name=SÃ©bastien Pierre
	email=sebastien.pierre@gmail.com
# FROM https://github.com/dandavison/delta
[core]
    pager = delta

[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true    # use n and N to move between diff sections
    light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)

[merge]
    conflictstyle = diff3

[diff]
    colorMoved = default
	pager = delta

[pull]
	# SEE: https://stackoverflow.com/questions/2472254/when-should-i-use-git-pull-rebase
	rebase  = false
[alias]
	lua = log --all --author
	dft = difftool
	ds = diff --staged
	# Recursive clone
	cr = clone --recurse-submodules
	# Shallow clone
	cs = clone --depth=1
	# https://www.shellhacks.com/git-diff-staged-unstaged-files/
	d  = status -vv
	co = checkout
	cm = commit -a
	st = status
	tip = rev-parse HEAD
	cbr = branch --show-current
	pr = pull --recurse-submodules
	# Checkout submodules
	sco = submodule update --init --recursive
	supr = submodule update --remote
	sup = submodule update
	sin = submodule init
	supl = submodule foreach git pull
	suplr = submodule foreach git pull --rebase
	rb = checkout --track
	br = branch --remote
	# List all branches, including remote
	lsb = branch -a
	# # SEE: https://softwaredoug.com/blog/2022/11/09/idiot-proof-git-aliases.html
    # mainbranch = "!git remote show origin | sed -n '/HEAD branch/s/.*: //p'"
    # synced = "!git pull origin $(git mainbranch) --rebase"
    # update = "!git pull origin $(git rev-parse --abbrev-ref HEAD) --rebase"
    # squash = "!git rebase -v -i $(git mainbranch)"
	# publish = push origin HEAD --force-with-lease
	# pub = publish
[init]
	defaultBranch = main
[core]
	excludesfile = ~/.gitignore
	# filemode = true
[fetch]
	prune = true
[submodule]
	recurse = true
[push]
	autoSetupRemote = true
[credential]
	helper = store
# [filter "lfs"]
# 	smudge = git-lfs smudge -- %f
# 	process = git-lfs filter-process
# 	required = true
# 	clean = git-lfs clean -- %f
